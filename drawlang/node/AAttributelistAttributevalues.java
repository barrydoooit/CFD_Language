/* This file was generated by SableCC (http://www.sablecc.org/). */

package drawlang.node;

import drawlang.analysis.*;

@SuppressWarnings("nls")
public final class AAttributelistAttributevalues extends PAttributevalues
{
    private PAttributevalues _attributevalues_;
    private TOpcomma _opcomma_;
    private PAttributevalue _attributevalue_;

    public AAttributelistAttributevalues()
    {
        // Constructor
    }

    public AAttributelistAttributevalues(
        @SuppressWarnings("hiding") PAttributevalues _attributevalues_,
        @SuppressWarnings("hiding") TOpcomma _opcomma_,
        @SuppressWarnings("hiding") PAttributevalue _attributevalue_)
    {
        // Constructor
        setAttributevalues(_attributevalues_);

        setOpcomma(_opcomma_);

        setAttributevalue(_attributevalue_);

    }

    @Override
    public Object clone()
    {
        return new AAttributelistAttributevalues(
            cloneNode(this._attributevalues_),
            cloneNode(this._opcomma_),
            cloneNode(this._attributevalue_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAAttributelistAttributevalues(this);
    }

    public PAttributevalues getAttributevalues()
    {
        return this._attributevalues_;
    }

    public void setAttributevalues(PAttributevalues node)
    {
        if(this._attributevalues_ != null)
        {
            this._attributevalues_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._attributevalues_ = node;
    }

    public TOpcomma getOpcomma()
    {
        return this._opcomma_;
    }

    public void setOpcomma(TOpcomma node)
    {
        if(this._opcomma_ != null)
        {
            this._opcomma_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._opcomma_ = node;
    }

    public PAttributevalue getAttributevalue()
    {
        return this._attributevalue_;
    }

    public void setAttributevalue(PAttributevalue node)
    {
        if(this._attributevalue_ != null)
        {
            this._attributevalue_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._attributevalue_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._attributevalues_)
            + toString(this._opcomma_)
            + toString(this._attributevalue_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._attributevalues_ == child)
        {
            this._attributevalues_ = null;
            return;
        }

        if(this._opcomma_ == child)
        {
            this._opcomma_ = null;
            return;
        }

        if(this._attributevalue_ == child)
        {
            this._attributevalue_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._attributevalues_ == oldChild)
        {
            setAttributevalues((PAttributevalues) newChild);
            return;
        }

        if(this._opcomma_ == oldChild)
        {
            setOpcomma((TOpcomma) newChild);
            return;
        }

        if(this._attributevalue_ == oldChild)
        {
            setAttributevalue((PAttributevalue) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
