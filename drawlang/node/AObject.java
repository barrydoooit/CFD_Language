/* This file was generated by SableCC (http://www.sablecc.org/). */

package drawlang.node;

import drawlang.analysis.*;

@SuppressWarnings("nls")
public final class AObject extends PObject
{
    private PDisplayop _displayop_;
    private PObjectidentifier _objectidentifier_;
    private TLBrace _lBrace_;
    private PContentlist _contentlist_;
    private TRBrace _rBrace_;
    private TOpsemicolon _opsemicolon_;

    public AObject()
    {
        // Constructor
    }

    public AObject(
        @SuppressWarnings("hiding") PDisplayop _displayop_,
        @SuppressWarnings("hiding") PObjectidentifier _objectidentifier_,
        @SuppressWarnings("hiding") TLBrace _lBrace_,
        @SuppressWarnings("hiding") PContentlist _contentlist_,
        @SuppressWarnings("hiding") TRBrace _rBrace_,
        @SuppressWarnings("hiding") TOpsemicolon _opsemicolon_)
    {
        // Constructor
        setDisplayop(_displayop_);

        setObjectidentifier(_objectidentifier_);

        setLBrace(_lBrace_);

        setContentlist(_contentlist_);

        setRBrace(_rBrace_);

        setOpsemicolon(_opsemicolon_);

    }

    @Override
    public Object clone()
    {
        return new AObject(
            cloneNode(this._displayop_),
            cloneNode(this._objectidentifier_),
            cloneNode(this._lBrace_),
            cloneNode(this._contentlist_),
            cloneNode(this._rBrace_),
            cloneNode(this._opsemicolon_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAObject(this);
    }

    public PDisplayop getDisplayop()
    {
        return this._displayop_;
    }

    public void setDisplayop(PDisplayop node)
    {
        if(this._displayop_ != null)
        {
            this._displayop_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._displayop_ = node;
    }

    public PObjectidentifier getObjectidentifier()
    {
        return this._objectidentifier_;
    }

    public void setObjectidentifier(PObjectidentifier node)
    {
        if(this._objectidentifier_ != null)
        {
            this._objectidentifier_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._objectidentifier_ = node;
    }

    public TLBrace getLBrace()
    {
        return this._lBrace_;
    }

    public void setLBrace(TLBrace node)
    {
        if(this._lBrace_ != null)
        {
            this._lBrace_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._lBrace_ = node;
    }

    public PContentlist getContentlist()
    {
        return this._contentlist_;
    }

    public void setContentlist(PContentlist node)
    {
        if(this._contentlist_ != null)
        {
            this._contentlist_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._contentlist_ = node;
    }

    public TRBrace getRBrace()
    {
        return this._rBrace_;
    }

    public void setRBrace(TRBrace node)
    {
        if(this._rBrace_ != null)
        {
            this._rBrace_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._rBrace_ = node;
    }

    public TOpsemicolon getOpsemicolon()
    {
        return this._opsemicolon_;
    }

    public void setOpsemicolon(TOpsemicolon node)
    {
        if(this._opsemicolon_ != null)
        {
            this._opsemicolon_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._opsemicolon_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._displayop_)
            + toString(this._objectidentifier_)
            + toString(this._lBrace_)
            + toString(this._contentlist_)
            + toString(this._rBrace_)
            + toString(this._opsemicolon_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._displayop_ == child)
        {
            this._displayop_ = null;
            return;
        }

        if(this._objectidentifier_ == child)
        {
            this._objectidentifier_ = null;
            return;
        }

        if(this._lBrace_ == child)
        {
            this._lBrace_ = null;
            return;
        }

        if(this._contentlist_ == child)
        {
            this._contentlist_ = null;
            return;
        }

        if(this._rBrace_ == child)
        {
            this._rBrace_ = null;
            return;
        }

        if(this._opsemicolon_ == child)
        {
            this._opsemicolon_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._displayop_ == oldChild)
        {
            setDisplayop((PDisplayop) newChild);
            return;
        }

        if(this._objectidentifier_ == oldChild)
        {
            setObjectidentifier((PObjectidentifier) newChild);
            return;
        }

        if(this._lBrace_ == oldChild)
        {
            setLBrace((TLBrace) newChild);
            return;
        }

        if(this._contentlist_ == oldChild)
        {
            setContentlist((PContentlist) newChild);
            return;
        }

        if(this._rBrace_ == oldChild)
        {
            setRBrace((TRBrace) newChild);
            return;
        }

        if(this._opsemicolon_ == oldChild)
        {
            setOpsemicolon((TOpsemicolon) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
