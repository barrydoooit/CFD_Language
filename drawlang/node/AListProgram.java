/* This file was generated by SableCC (http://www.sablecc.org/). */

package drawlang.node;

import drawlang.analysis.*;

@SuppressWarnings("nls")
public final class AListProgram extends PProgram
{
    private PStatementlist _statementlist_;

    public AListProgram()
    {
        // Constructor
    }

    public AListProgram(
        @SuppressWarnings("hiding") PStatementlist _statementlist_)
    {
        // Constructor
        setStatementlist(_statementlist_);

    }

    @Override
    public Object clone()
    {
        return new AListProgram(
            cloneNode(this._statementlist_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAListProgram(this);
    }

    public PStatementlist getStatementlist()
    {
        return this._statementlist_;
    }

    public void setStatementlist(PStatementlist node)
    {
        if(this._statementlist_ != null)
        {
            this._statementlist_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._statementlist_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._statementlist_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._statementlist_ == child)
        {
            this._statementlist_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._statementlist_ == oldChild)
        {
            setStatementlist((PStatementlist) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
