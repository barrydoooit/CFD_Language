/* This file was generated by SableCC (http://www.sablecc.org/). */

package drawlang.node;

import drawlang.analysis.*;

@SuppressWarnings("nls")
public final class AHiddenDisplayop extends PDisplayop
{
    private TOpdot _opdot_;

    public AHiddenDisplayop()
    {
        // Constructor
    }

    public AHiddenDisplayop(
        @SuppressWarnings("hiding") TOpdot _opdot_)
    {
        // Constructor
        setOpdot(_opdot_);

    }

    @Override
    public Object clone()
    {
        return new AHiddenDisplayop(
            cloneNode(this._opdot_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAHiddenDisplayop(this);
    }

    public TOpdot getOpdot()
    {
        return this._opdot_;
    }

    public void setOpdot(TOpdot node)
    {
        if(this._opdot_ != null)
        {
            this._opdot_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._opdot_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._opdot_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._opdot_ == child)
        {
            this._opdot_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._opdot_ == oldChild)
        {
            setOpdot((TOpdot) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
