/* This file was generated by SableCC (http://www.sablecc.org/). */

package drawlang.node;

import drawlang.analysis.*;

@SuppressWarnings("nls")
public final class AMisignSign extends PSign
{
    private TOpminus _opminus_;

    public AMisignSign()
    {
        // Constructor
    }

    public AMisignSign(
        @SuppressWarnings("hiding") TOpminus _opminus_)
    {
        // Constructor
        setOpminus(_opminus_);

    }

    @Override
    public Object clone()
    {
        return new AMisignSign(
            cloneNode(this._opminus_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAMisignSign(this);
    }

    public TOpminus getOpminus()
    {
        return this._opminus_;
    }

    public void setOpminus(TOpminus node)
    {
        if(this._opminus_ != null)
        {
            this._opminus_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._opminus_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._opminus_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._opminus_ == child)
        {
            this._opminus_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._opminus_ == oldChild)
        {
            setOpminus((TOpminus) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
