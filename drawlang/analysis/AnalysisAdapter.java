/* This file was generated by SableCC (http://www.sablecc.org/). */

package drawlang.analysis;

import java.util.*;
import drawlang.node.*;

public class AnalysisAdapter implements Analysis
{
    private Hashtable<Node,Object> in;
    private Hashtable<Node,Object> out;

    public Object getIn(Node node)
    {
        if(this.in == null)
        {
            return null;
        }

        return this.in.get(node);
    }

    public void setIn(Node node, Object o)
    {
        if(this.in == null)
        {
            this.in = new Hashtable<Node,Object>(1);
        }

        if(o != null)
        {
            this.in.put(node, o);
        }
        else
        {
            this.in.remove(node);
        }
    }

    public Object getOut(Node node)
    {
        if(this.out == null)
        {
            return null;
        }

        return this.out.get(node);
    }

    public void setOut(Node node, Object o)
    {
        if(this.out == null)
        {
            this.out = new Hashtable<Node,Object>(1);
        }

        if(o != null)
        {
            this.out.put(node, o);
        }
        else
        {
            this.out.remove(node);
        }
    }

    public void caseStart(Start node)
    {
        defaultCase(node);
    }

    public void caseAListProgram(AListProgram node)
    {
        defaultCase(node);
    }

    public void caseAStmtStatementlist(AStmtStatementlist node)
    {
        defaultCase(node);
    }

    public void caseAStmtlistStatementlist(AStmtlistStatementlist node)
    {
        defaultCase(node);
    }

    public void caseAObjStatement(AObjStatement node)
    {
        defaultCase(node);
    }

    public void caseACmdStatement(ACmdStatement node)
    {
        defaultCase(node);
    }

    public void caseAObject(AObject node)
    {
        defaultCase(node);
    }

    public void caseAExplicitObjectidentifier(AExplicitObjectidentifier node)
    {
        defaultCase(node);
    }

    public void caseAImplicitObjectidentifier(AImplicitObjectidentifier node)
    {
        defaultCase(node);
    }

    public void caseADisplayDisplayop(ADisplayDisplayop node)
    {
        defaultCase(node);
    }

    public void caseAHiddenDisplayop(AHiddenDisplayop node)
    {
        defaultCase(node);
    }

    public void caseACommand(ACommand node)
    {
        defaultCase(node);
    }

    public void caseAAttrlistContentlist(AAttrlistContentlist node)
    {
        defaultCase(node);
    }

    public void caseAObjlistContentlist(AObjlistContentlist node)
    {
        defaultCase(node);
    }

    public void caseAAttrAttributelist(AAttrAttributelist node)
    {
        defaultCase(node);
    }

    public void caseAAttrlistAttributelist(AAttrlistAttributelist node)
    {
        defaultCase(node);
    }

    public void caseAAttribute(AAttribute node)
    {
        defaultCase(node);
    }

    public void caseAKeywordclassAttributename(AKeywordclassAttributename node)
    {
        defaultCase(node);
    }

    public void caseAKeywordcolorAttributename(AKeywordcolorAttributename node)
    {
        defaultCase(node);
    }

    public void caseAKeywordpositionAttributename(AKeywordpositionAttributename node)
    {
        defaultCase(node);
    }

    public void caseAKeywordborderAttributename(AKeywordborderAttributename node)
    {
        defaultCase(node);
    }

    public void caseAKeywordsizeAttributename(AKeywordsizeAttributename node)
    {
        defaultCase(node);
    }

    public void caseAKeywordpointsAttributename(AKeywordpointsAttributename node)
    {
        defaultCase(node);
    }

    public void caseAAttributevalueAttributevalues(AAttributevalueAttributevalues node)
    {
        defaultCase(node);
    }

    public void caseAAttributelistAttributevalues(AAttributelistAttributevalues node)
    {
        defaultCase(node);
    }

    public void caseAVariablevalueAttributevalue(AVariablevalueAttributevalue node)
    {
        defaultCase(node);
    }

    public void caseANumericvalueAttributevalue(ANumericvalueAttributevalue node)
    {
        defaultCase(node);
    }

    public void caseAHexcolorvalueAttributevalue(AHexcolorvalueAttributevalue node)
    {
        defaultCase(node);
    }

    public void caseAKeywordvalueAttributevalue(AKeywordvalueAttributevalue node)
    {
        defaultCase(node);
    }

    public void caseAPairwisevalueAttributevalue(APairwisevalueAttributevalue node)
    {
        defaultCase(node);
    }

    public void caseAKeywordcircleKeywordclasstype(AKeywordcircleKeywordclasstype node)
    {
        defaultCase(node);
    }

    public void caseAKeywordrectKeywordclasstype(AKeywordrectKeywordclasstype node)
    {
        defaultCase(node);
    }

    public void caseAKeywordpolyKeywordclasstype(AKeywordpolyKeywordclasstype node)
    {
        defaultCase(node);
    }

    public void caseAPairwise(APairwise node)
    {
        defaultCase(node);
    }

    public void caseAEmptyPairvalue(AEmptyPairvalue node)
    {
        defaultCase(node);
    }

    public void caseANumericpairvaluePairvalue(ANumericpairvaluePairvalue node)
    {
        defaultCase(node);
    }

    public void caseAVariablepairvaluePairvalue(AVariablepairvaluePairvalue node)
    {
        defaultCase(node);
    }

    public void caseAUnsignedNumeric(AUnsignedNumeric node)
    {
        defaultCase(node);
    }

    public void caseASignedNumeric(ASignedNumeric node)
    {
        defaultCase(node);
    }

    public void caseAOpsignSign(AOpsignSign node)
    {
        defaultCase(node);
    }

    public void caseAMisignSign(AMisignSign node)
    {
        defaultCase(node);
    }

    public void caseTKeywordclass(TKeywordclass node)
    {
        defaultCase(node);
    }

    public void caseTKeywordcolor(TKeywordcolor node)
    {
        defaultCase(node);
    }

    public void caseTKeywordposition(TKeywordposition node)
    {
        defaultCase(node);
    }

    public void caseTKeywordborder(TKeywordborder node)
    {
        defaultCase(node);
    }

    public void caseTKeywordsize(TKeywordsize node)
    {
        defaultCase(node);
    }

    public void caseTKeywordpoints(TKeywordpoints node)
    {
        defaultCase(node);
    }

    public void caseTHexcolor(THexcolor node)
    {
        defaultCase(node);
    }

    public void caseTNumber(TNumber node)
    {
        defaultCase(node);
    }

    public void caseTKeywordcircle(TKeywordcircle node)
    {
        defaultCase(node);
    }

    public void caseTKeywordrect(TKeywordrect node)
    {
        defaultCase(node);
    }

    public void caseTKeywordpoly(TKeywordpoly node)
    {
        defaultCase(node);
    }

    public void caseTIdentifier(TIdentifier node)
    {
        defaultCase(node);
    }

    public void caseTDollarsign(TDollarsign node)
    {
        defaultCase(node);
    }

    public void caseTLBrace(TLBrace node)
    {
        defaultCase(node);
    }

    public void caseTRBrace(TRBrace node)
    {
        defaultCase(node);
    }

    public void caseTLBrk(TLBrk node)
    {
        defaultCase(node);
    }

    public void caseTRBrk(TRBrk node)
    {
        defaultCase(node);
    }

    public void caseTOpsemicolon(TOpsemicolon node)
    {
        defaultCase(node);
    }

    public void caseTOpcolon(TOpcolon node)
    {
        defaultCase(node);
    }

    public void caseTOpcomma(TOpcomma node)
    {
        defaultCase(node);
    }

    public void caseTOpequal(TOpequal node)
    {
        defaultCase(node);
    }

    public void caseTOpplus(TOpplus node)
    {
        defaultCase(node);
    }

    public void caseTOpminus(TOpminus node)
    {
        defaultCase(node);
    }

    public void caseTOpdot(TOpdot node)
    {
        defaultCase(node);
    }

    public void caseTOpleftangle(TOpleftangle node)
    {
        defaultCase(node);
    }

    public void caseTBlank(TBlank node)
    {
        defaultCase(node);
    }

    public void caseEOF(EOF node)
    {
        defaultCase(node);
    }

    public void defaultCase(@SuppressWarnings("unused") Node node)
    {
        // do nothing
    }
}
