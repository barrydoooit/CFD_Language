/* This file was generated by SableCC (http://www.sablecc.org/). */

package drawlang.analysis;

import drawlang.node.*;

public interface Analysis extends Switch
{
    Object getIn(Node node);
    void setIn(Node node, Object o);
    Object getOut(Node node);
    void setOut(Node node, Object o);

    void caseStart(Start node);
    void caseAListProgram(AListProgram node);
    void caseAStmtStatementlist(AStmtStatementlist node);
    void caseAStmtlistStatementlist(AStmtlistStatementlist node);
    void caseAObjStatement(AObjStatement node);
    void caseACmdStatement(ACmdStatement node);
    void caseAObject(AObject node);
    void caseAExplicitObjectidentifier(AExplicitObjectidentifier node);
    void caseAImplicitObjectidentifier(AImplicitObjectidentifier node);
    void caseADisplayDisplayop(ADisplayDisplayop node);
    void caseAHiddenDisplayop(AHiddenDisplayop node);
    void caseACommand(ACommand node);
    void caseAAttrlistContentlist(AAttrlistContentlist node);
    void caseAObjlistContentlist(AObjlistContentlist node);
    void caseAAttrAttributelist(AAttrAttributelist node);
    void caseAAttrlistAttributelist(AAttrlistAttributelist node);
    void caseAAttribute(AAttribute node);
    void caseAKeywordclassAttributename(AKeywordclassAttributename node);
    void caseAKeywordcolorAttributename(AKeywordcolorAttributename node);
    void caseAKeywordpositionAttributename(AKeywordpositionAttributename node);
    void caseAKeywordborderAttributename(AKeywordborderAttributename node);
    void caseAKeywordsizeAttributename(AKeywordsizeAttributename node);
    void caseAKeywordpointsAttributename(AKeywordpointsAttributename node);
    void caseAAttributevalueAttributevalues(AAttributevalueAttributevalues node);
    void caseAAttributelistAttributevalues(AAttributelistAttributevalues node);
    void caseAVariablevalueAttributevalue(AVariablevalueAttributevalue node);
    void caseANumericvalueAttributevalue(ANumericvalueAttributevalue node);
    void caseAHexcolorvalueAttributevalue(AHexcolorvalueAttributevalue node);
    void caseAKeywordvalueAttributevalue(AKeywordvalueAttributevalue node);
    void caseAPairwisevalueAttributevalue(APairwisevalueAttributevalue node);
    void caseAKeywordcircleKeywordclasstype(AKeywordcircleKeywordclasstype node);
    void caseAKeywordrectKeywordclasstype(AKeywordrectKeywordclasstype node);
    void caseAKeywordpolyKeywordclasstype(AKeywordpolyKeywordclasstype node);
    void caseAPairwise(APairwise node);
    void caseAEmptyPairvalue(AEmptyPairvalue node);
    void caseANumericpairvaluePairvalue(ANumericpairvaluePairvalue node);
    void caseAVariablepairvaluePairvalue(AVariablepairvaluePairvalue node);
    void caseAUnsignedNumeric(AUnsignedNumeric node);
    void caseASignedNumeric(ASignedNumeric node);
    void caseAOpsignSign(AOpsignSign node);
    void caseAMisignSign(AMisignSign node);

    void caseTKeywordclass(TKeywordclass node);
    void caseTKeywordcolor(TKeywordcolor node);
    void caseTKeywordposition(TKeywordposition node);
    void caseTKeywordborder(TKeywordborder node);
    void caseTKeywordsize(TKeywordsize node);
    void caseTKeywordpoints(TKeywordpoints node);
    void caseTHexcolor(THexcolor node);
    void caseTNumber(TNumber node);
    void caseTKeywordcircle(TKeywordcircle node);
    void caseTKeywordrect(TKeywordrect node);
    void caseTKeywordpoly(TKeywordpoly node);
    void caseTIdentifier(TIdentifier node);
    void caseTDollarsign(TDollarsign node);
    void caseTLBrace(TLBrace node);
    void caseTRBrace(TRBrace node);
    void caseTLBrk(TLBrk node);
    void caseTRBrk(TRBrk node);
    void caseTOpsemicolon(TOpsemicolon node);
    void caseTOpcolon(TOpcolon node);
    void caseTOpcomma(TOpcomma node);
    void caseTOpequal(TOpequal node);
    void caseTOpplus(TOpplus node);
    void caseTOpminus(TOpminus node);
    void caseTOpdot(TOpdot node);
    void caseTOpleftangle(TOpleftangle node);
    void caseTBlank(TBlank node);
    void caseEOF(EOF node);
}
